name: Cypress Tests

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        containers: [1, 2]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Setup Prisma DB
        working-directory: backend
        run: npx prisma db push
        env:
          DATABASE_URL: 'file:./test.db'

      - name: Build apps
        run: npm run build

      - name: Set recording flag
        id: record
        run: |
          if [ -n "${{ secrets.CYPRESS_RECORD_KEY }}" ]; then echo "hasRecord=true" >> $GITHUB_OUTPUT; else echo "hasRecord=false" >> $GITHUB_OUTPUT; fi

      - name: Cypress run (parallel, recorded)
        if: steps.record.outputs.hasRecord == 'true'
        uses: cypress-io/github-action@v6
        with:
          # Start servers from repository root (backend + Vite preview)
          start: npx concurrently "npm run start:backend" "npm run start:frontend"
          wait-on: 'http://localhost:3001/api/health,http://localhost:4173'
          wait-on-timeout: 120
          # Run Cypress pointing at the frontend project with pre-installed deps
          project: ./frontend
          install: false
          record: true
          parallel: true
        env:
          # Ensure backend has DB and port set when started by the action
          DATABASE_URL: file:./test.db
          PORT: 3001
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_baseUrl: http://localhost:4173
          CYPRESS_apiUrl: http://localhost:3001

      - name: Cypress run (parallel, unrecorded)
        if: steps.record.outputs.hasRecord == 'false'
        uses: cypress-io/github-action@v6
        with:
          # Start servers from repository root (backend + Vite preview)
          start: npx concurrently "npm run start:backend" "npm run start:frontend"
          wait-on: 'http://localhost:3001/api/health,http://localhost:4173'
          wait-on-timeout: 120
          # Run Cypress pointing at the frontend project with pre-installed deps
          project: ./frontend
          install: false
          record: false
          parallel: true
        env:
          # Ensure backend has DB and port set when started by the action
          DATABASE_URL: file:./test.db
          PORT: 3001
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_baseUrl: http://localhost:4173
          CYPRESS_apiUrl: http://localhost:3001
